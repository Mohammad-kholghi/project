---
env: 
  NODE_ENV=production
  PORT=2368

setup:
# ----------------------------------------------------------------------------------------------------------
  # global
  - apt: update
  # - apt: upgrade -y

# ----------------------------------------------------------------------------------------------------------
  # docker
  - apt: install -y apt-transport-https ca-certificates curl software-properties-common #for docker
  - command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - command: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu noble stable"
  - apt: update
  - apt: install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - command: sudo usermod -aG docker ${USER}


#    sudo apt install apt-transport-https ca-certificates curl software-properties-common
#    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
#    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu noble stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#    sudo apt update
#    sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#    sudo snap install docker         # version 28.1.1+1, or
#    sudo apt  install docker.io      # version 26.1.3-0ubuntu1~24.04.1
#    sudo service docker start
  # docker
  # - command: wget "https://desktop.docker.com/linux/main/amd64/docker-desktop-amd64.deb"
  # - command: dpkg -i docker-desktop-amd64.deb
  # - command: sudo apt install -f

# ----------------------------------------------------------------------------------------------------------
  # node
  - apt: install -y gnupg
  - command: curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
  - apt: install -y nodejs

# ----------------------------------------------------------------------------------------------------------
  # yarn
  - command: sudo npm cache clean --force #to make sure everything works fine
  - command: sudo npm install --global yarn

# ----------------------------------------------------------------------------------------------------------
  # ghost
  # - git: --recurse-submodules git@github.com:TryGhost/Ghost
  - git: clone https://github.com/TryGhost/Ghost.git

  # TODO: does this wait in Ghost dir?
  - command: cd Ghost && export SSH_AUTH_SOCK && git init && yarn install && yarn setup
# TODO: git init works on windows. Check that.
# change     "setup": "yarn && git submodule update --init && NODE_ENV=development node .github/scripts/setup.js",



    # env: 
    #   NODE_ENV=production
    #   PORT=2368
#  - git: https://github.com/.../ghost.git
  - apt: autoremove
  - apt: clean
  - apt: autoclean


jobs:
  build:
    - name: install
      command: npm install
